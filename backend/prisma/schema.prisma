// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  displayName  String?
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  goals        Goal[]
  progress     ProgressEntry[]
  moodBoard    MoodBoardItem[]
  reflections  Reflection[]
}

model Goal {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  description String?
  category    String?
  priority    Int?
  targetDate  DateTime?
  milestones  Json?
  status      String      @default("not_started")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  progress    ProgressEntry[]
}

model ProgressEntry {
  id            String   @id @default(cuid())
  userId        String
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  goalId        String
  goal          Goal     @relation(fields: [goalId], references: [id], onDelete: Cascade)
  period        String
  date          DateTime
  progressValue Int?
  note          String?
  mood          String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model MoodBoardItem {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  type      String
  content   String
  tags      Json?
  position  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reflection {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  year      Int
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
